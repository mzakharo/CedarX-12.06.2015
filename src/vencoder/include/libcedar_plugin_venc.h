/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'libcedar_plugin_venc'
*/
#include <pthread.h>

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long


/* 23 */
typedef VencRect VencRect_0;

/* 25 */
typedef VENC_CODING_MODE VENC_CODING_MODE_0;

/* 26 */

/* 27 */
typedef VENC_PIXEL_FMT VENC_PIXEL_FMT_0;


/* 29 */
typedef VencBaseConfig VencBaseConfig_0;

/* 30 */


/* 31 */
typedef VENC_H264PROFILETYPE VENC_H264PROFILETYPE_0;

/* 32 */


/* 33 */
typedef VENC_H264LEVELTYPE VENC_H264LEVELTYPE_0;


/* 35 */
typedef VencH264ProfileLevel VencH264ProfileLevel_0;

/* 37 */
typedef VencQPRange VencQPRange_0;

/* 39 */
typedef MotionParam MotionParam_0;

/* 41 */
typedef VencHeaderData VencHeaderData_0;

/* 42 */

/* 43 */
typedef VencInputBuffer VencInputBuffer_0;

/* 44 */
/* 45 */
typedef VencOutputBuffer VencOutputBuffer_0;

/* 46 */

/* 47 */
typedef VencH264FixQP VencH264FixQP_0;

/* 48 */

/* 49 */
typedef VencCyclicIntraRefresh VencCyclicIntraRefresh_0;

/* 50 */
/* 51 */
typedef VencSize VencSize_0;

/* 52 */
/* 53 */
typedef VencH264Param VencH264Param_0;


/* 55 */
typedef VencROIConfig VencROIConfig_0;

/* 56 */

/* 57 */

/* 60 */
typedef struct 
{
  int nStreamOffset;
  int nStreamLength;
  __int64 nPts;
  int nFlags;
  int nID;
} StreamInfo;

/* 61 */
typedef StreamInfo StreamInfo_0;

/* 62 */
typedef struct 
{
  StreamInfo_0 *pStreamInfos;
  int nMaxFrameNum;
  int nValidFrameNum;
  int nUnReadFrameNum;
  int nReadPos;
  int nWritePos;
}BSListQ;

/* 63 */
typedef BSListQ BSListQ_0;

/* 64 */
typedef struct 
{
  pthread_mutex_t mutex;
  unsigned __int8 *pStreamBuffer;
  unsigned __int8 *pStreamBufferPhyAddrEnd;
  unsigned __int8 *pStreamBufferPhyAddr;
  int nStreamBufferSize;
  int nWriteOffset;
  int nValidDataSize;
  BSListQ_0 nBSListQ;
} BitStreamManager;

/* 65 */
typedef BitStreamManager BitStreamManager_0;

/* 66 */
typedef struct 
{
  unsigned __int32 picHeighthInMbs : 16;
  unsigned __int32 picWidthInMbs : 16;
}regPicInfo;

/* 67 */
typedef struct 
{
  unsigned __int32 picType : 2;
  unsigned __int32 refPicType : 2;
  unsigned __int32 sliceType : 3;
  unsigned __int32 r0 : 1;
  unsigned __int32 entropyType : 1;
  unsigned __int32 ctxInitMethod : 1;
  unsigned __int32 fixModeNum : 2;
  unsigned __int32 deBlockIdc : 2;
  unsigned __int32 r1 : 1;
  unsigned __int32 idr_pic_id : 1;
  unsigned __int32 alphaOffsetDiv2 : 4;
  unsigned __int32 betaOffsetDiv2 : 4;
  unsigned __int32 frame_num : 4;
  unsigned __int32 ref_pic_reorder_flag : 1;
  unsigned __int32 h264_slice_enable : 1;
  unsigned __int32 stuff_zero_enable : 1;
  unsigned __int32 eptbDisable : 1;
}regPara0;

/* 68 */
typedef struct 
{
  unsigned __int32 fixedQP : 6;
  unsigned __int32 rcMode : 2;
  unsigned __int32 fixedIntraQp : 6;
  unsigned __int32 r0 : 2;
  unsigned __int32 qpcOffset0 : 3;
  unsigned __int32 r1 : 13;
}regPara1_version0;

/* 69 */
typedef struct 
{
  unsigned __int32 fixedQP : 6;
  unsigned __int32 rcMode : 2;
  unsigned __int32 dynamicMeEn : 1;
  unsigned __int32 tile32OutputEn : 1;
  unsigned __int32 lenStride : 4;
  unsigned __int32 r0 : 2;
  unsigned __int32 qpcOffset0 : 3;
  unsigned __int32 temFilterHisOutDisable : 1;
  unsigned __int32 r1 : 4;
  unsigned __int32 ClipMVPar : 2;
  unsigned __int32 ClipMVEn : 1;
  unsigned __int32 r2 : 1;
  unsigned __int32 ModeOptimizePar : 3;
  unsigned __int32 ModeOptimizeEn : 1;
}regPara1_version1;

/* 70 */
typedef struct 
{
  unsigned __int32 mvScale : 8;
  unsigned __int32 slice_height : 8;
  unsigned __int32 pic_order_cnt_lsb : 8;
  unsigned __int32 log2_maxpicorder_lsb : 3;
  unsigned __int32 nal_ref_idc : 2;
  unsigned __int32 bDirectDisable : 1;
  unsigned __int32 bFrameWbEn : 1;
  unsigned __int32 fRefIsISlice : 1;
}regPara2;

/* 71 */
typedef struct 
{
  unsigned __int32 intraPredDisable : 1;
  unsigned __int32 fmeSearchLevel : 2;
  unsigned __int32 qsmtssDisable : 1;
  unsigned __int32 qsmtssRefineDisable : 1;
  unsigned __int32 imeTimePrio : 1;
  unsigned __int32 coarseCostCtrl : 2;
  unsigned __int32 meDisable : 1;
  unsigned __int32 skipmdoptDisable : 1;
  unsigned __int32 r0 : 1;
  unsigned __int32 qpix_16x16_off : 1;
  unsigned __int32 quantThresholdDisable : 1;
  unsigned __int32 intraPlanDisable : 1;
  unsigned __int32 intra4x4Disable : 1;
  unsigned __int32 splitMbDisable : 1;
  unsigned __int32 wbMVInfoDisable : 1;
  unsigned __int32 roiEnable : 1;
  unsigned __int32 deblk_to_dram : 1;
  unsigned __int32 tpix_to_dram : 1;
  unsigned __int32 qpix_smart_off : 1;
  unsigned __int32 qpix_split_off : 1;
  unsigned __int32 r2 : 10;
}regMePara;

/* 72 */
typedef struct 
{
  unsigned __int32 pic_var : 8;
  unsigned __int32 maxcoef : 7;
  unsigned __int32 r0 : 1;
  unsigned __int32 picvar_maxcoef : 14;
  unsigned __int32 fixFilterEn : 1;
  unsigned __int32 temp_filter_enable : 1;
}regTemporalPara;

/* 73 */
typedef struct 
{
  unsigned __int32 startType : 4;
  unsigned __int32 r0 : 4;
  unsigned __int32 nBits : 6;
  unsigned __int32 r1 : 2;
  unsigned __int32 encodeMode : 2;
  unsigned __int32 r2 : 14;
}regStartTrig;

/* 74 */
typedef struct 
{
  unsigned __int32 col_end_mb : 8;
  unsigned __int32 r0 : 8;
  unsigned __int32 col_start_mb : 8;
  unsigned __int32 r1 : 7;
  unsigned __int32 refresh_enable : 1;
} intra_refresh_reg;

/* 75 */
typedef intra_refresh_reg intra_refresh_reg_0;

/* 76 */
typedef struct 
{
  unsigned __int32 dynamic_me_th0 : 10;
  unsigned __int32 r0 : 6;
  unsigned __int32 dynamic_me_th1 : 10;
  unsigned __int32 r1 : 6;
} dynamic_me_par0;

/* 77 */
typedef dynamic_me_par0 dynamic_me_par0_0;

/* 78 */
typedef struct 
{
  unsigned __int32 dynamic_me_th2 : 10;
  unsigned __int32 r0 : 6;
  unsigned __int32 dynamic_me_th3 : 10;
  unsigned __int32 r1 : 6;
} dynamic_me_par1;

/* 79 */
typedef dynamic_me_par1 dynamic_me_par1_0;

/* 80 */
typedef struct 
{
  unsigned __int32 roi_x_start : 8;
  unsigned __int32 roi_x_end : 8;
  unsigned __int32 roi_y_start : 8;
  unsigned __int32 roi_y_end : 8;
}roi_area;

/* 81 */
typedef roi_area roi_area_0;

/* 82 */
typedef struct 
{
  unsigned __int32 qp_offset_0 : 6;
  unsigned __int32 r0 : 2;
  unsigned __int32 qp_offset_1 : 6;
  unsigned __int32 r1 : 2;
  unsigned __int32 qp_offset_2 : 6;
  unsigned __int32 r2 : 2;
  unsigned __int32 qp_offset_3 : 6;
  unsigned __int32 r3 : 2;
} roi_qp_offset;

/* 83 */
typedef roi_qp_offset roi_qp_offset_0;

/* 84 */
typedef struct 
{
  unsigned __int32 picHeighthInMbs : 16;
  unsigned __int32 picWidthInMbs : 16;
}regIspPicInfo;

/* 85 */
typedef struct 
{
  unsigned __int32 thumbWbStrideDiv16 : 10;
  unsigned __int32 r0 : 6;
  unsigned __int32 csiInputSrideDiv16 : 10;
  unsigned __int32 r1 : 6;
} regCsiStrideCtrl;

/* 86 */
typedef struct 
{
  unsigned __int32 ispIntEnable : 1;
  unsigned __int32 colorspaceRGBtoYuv : 2;
  unsigned __int32 colorspaceYuvtoYuv : 2;
  unsigned __int32 r0 : 11;
  unsigned __int32 scalerEnable : 1;
  unsigned __int32 r1 : 1;
  unsigned __int32 overLayerEnable : 1;
  unsigned __int32 thumbEnable : 1;
  unsigned __int32 rot_angle : 2;
  unsigned __int32 r2 : 1;
  unsigned __int32 patternOutMode : 2;
  unsigned __int32 thumbScaleFactor : 2;
  unsigned __int32 patternInMode : 5;
}regIspCtrlPara;

/* 87 */
typedef struct 
{
  unsigned __int32 ispIntEnable : 1;
  unsigned __int32 r0 : 15;
  unsigned __int32 scalerEnable : 1;
  unsigned __int32 r1 : 1;
  unsigned __int32 overLayerEnable : 1;
  unsigned __int32 thumbEnable : 1;
  unsigned __int32 r2 : 3;
  unsigned __int32 patternOutMode : 2;
  unsigned __int32 thumbScaleFactor : 2;
  unsigned __int32 r3 : 1;
  unsigned __int32 patternInMode : 4;
} regIspCtrlPara_1633;

/* 88 */
typedef struct 
{
  unsigned __int32 ispIntEnable : 1;
  unsigned __int32 r0 : 7;
  unsigned __int32 dpcEnable : 1;
  unsigned __int32 whiteBalanceEnable : 1;
  unsigned __int32 cfaIinterpEnable : 1;
  unsigned __int32 rgb2RgbEnable : 1;
  unsigned __int32 gammaCorrectEnable : 1;
  unsigned __int32 rgb2YUVEnable : 1;
  unsigned __int32 lumaEqEnable : 1;
  unsigned __int32 contrastAdEnable : 1;
  unsigned __int32 scalerEnable : 1;
  unsigned __int32 skinDetectEnable : 1;
  unsigned __int32 overLayerEnable : 1;
  unsigned __int32 thumbEnable : 1;
  unsigned __int32 mdEnable : 1;
  unsigned __int32 motionRefMode : 1;
  unsigned __int32 r1 : 2;
  unsigned __int32 patternOutMode : 1;
  unsigned __int32 thumbScaleFactor : 2;
  unsigned __int32 colorSpace : 2;
  unsigned __int32 patternInMode : 3;
}regIspCtrlPara_1651;

/* 89 */
typedef struct 
{
  unsigned __int32 outMbWidth : 10;
  unsigned __int32 r0 : 4;
  unsigned __int32 topfieldOnly : 1;
  unsigned __int32 horFilterType : 1;
  unsigned __int32 outMbHeight : 10;
  unsigned __int32 r1 : 6;
}regScalarCtrl;

/* 90 */
typedef struct 
{
  unsigned __int32 outMbWidth : 8;
  unsigned __int32 outMbHeight : 8;
  unsigned __int32 topfieldOnly : 1;
  unsigned __int32 horFilterType : 1;
  unsigned __int32 horHPFEnable : 1;
  unsigned __int32 horHPFType : 1;
  unsigned __int32 r0 : 4;
  unsigned __int32 maxGain : 4;
  unsigned __int32 slop : 4;
}regScalarCtrl_old;

/* 91 */
typedef struct 
{
  unsigned __int32 horPhase : 12;
  unsigned __int32 r0 : 4;
  unsigned __int32 verPhase : 12;
  unsigned __int32 r1 : 4;
}regScalarYPhase;

/* 92 */
typedef struct 
{
  unsigned __int32 horPhase : 12;
  unsigned __int32 r0 : 4;
  unsigned __int32 verPhase : 12;
  unsigned __int32 r1 : 4;
}regScalarCPhase;

/* 93 */
typedef struct 
{
  unsigned __int32 horRatio : 11;
  unsigned __int32 r0 : 1;
  unsigned __int32 verRatio : 11;
  unsigned __int32 r1 : 9;
}regScalarRatio;

/* 94 */
typedef struct 
{
  regIspPicInfo rPicInfo;
  regIspCtrlPara rCtrlPara;
  regIspCtrlPara_1651 rCtrlPara_1651;
  regIspCtrlPara_1633 rCtrlPara_1633;
  regCsiStrideCtrl rCsiStrideCtrl;
  regScalarCtrl rScalarCtrl;
  regScalarCtrl_old rScalarCtrl_old;
  regScalarYPhase rScalarYPhase;
  regScalarCPhase rScalarCPhase;
  regScalarRatio rScalarRatio;
}IspReg;

/* 95 */
typedef IspReg IspReg_0;

/* 96 */
typedef struct 
{
  int rotateAngle;
  unsigned int inputWidthMB;
  unsigned int inputHeightMB;
  unsigned int outputWidthMB;
  unsigned int outputHeightMB;
  int inputStrideMB;
  int thumbEnable;
  int thumbScaleFactor;
  int colorFormat;
  unsigned int phyAddressY;
  unsigned int phyAddressC0;
  unsigned int phyAddressC1;
  unsigned int thumbwbPhyAddressY;
  unsigned int thumbwbPhyAddressC;
  int x_offset;
  int y_offset;
  unsigned int colorSpaceRgb2Yuv;
  unsigned int colorSpaceYuv2Yuv;
  int picType;
  unsigned int IcVersion;
}IspInfo;

/* 97 */
typedef IspInfo IspInfo_0;

/* 98 */
typedef struct 
{
  unsigned int ispBaseAdddress;
  IspReg_0 sIspReg;
  unsigned int scaler_coeff[64];
  unsigned int bicubic_ratio;
}IspCtx;

/* 99 */
typedef IspCtx IspCtx_0;

/* 100 */
typedef struct 
{
  float bit_rate;
  float frame_rate;
  float PrevBitRate;
  __attribute__((aligned(8))) double GAMMAP;
  double BETAP;
  double TargetBufferLevel;
  double AveWp;
  double AveWb;
  int MyInitialQp;
  __attribute__((aligned(8))) double PreviousPictureMAD;
  double MADPictureC1;
  double MADPictureC2;
  double PMADPictureC1;
  double PMADPictureC2;
  double PPictureMAD[21];
  double PictureMAD[21];
  double ReferenceMAD[21];
  double m_rgQp[21];
  double m_rgRp[21];
  double Pm_rgQp[21];
  double Pm_rgRp[21];
  double m_X1;
  double m_X2;
  double Pm_X1;
  double Pm_X2;
  int Pm_Qp;
  int MADm_windowSize;
  int m_windowSize;
  int m_Qc;
  unsigned int average_q;
  unsigned int I_filter_average_q;
  int PPreHeader;
  int PrevLastQP;
  int CurrLastQP;
  int NumberofCodedPFrame;
  int NumberofPPicture;
  int NumberofCodedBFrame;
  int NumberofBFrames;
  __attribute__((aligned(8))) double CurrentFrameMAD;
  double PreviousFrameMAD;
  __int64 Pprev_bits;
  int Xp;
  int Xb;
  int Target;
  int Np;
  int Nb;
  int UpperBound1;
  int UpperBound2;
  int LowerBound;
  double Wp;
  double Wb;
  double DeltaP;
  int TotalPFrame;
  int PMaxQpChange;
  __int64 CurrentBufferFullness;
  __int64 RemainingBits;
  int NumberofHeaderBits;
  int NumberofTextureBits;
  __int64 TotalMAD;
}rc_quadratic;

/* 101 */
typedef rc_quadratic RCQuadratic;

/* 102 */
typedef struct 
{
  unsigned __int8 pic_parameter_set_id;
  unsigned __int8 seq_parameter_set_id;
  unsigned __int8 entropy_coding_mode_flag;
  unsigned __int8 pic_order_present_flag;
  unsigned __int8 num_ref_idx_l0_active;
  unsigned __int8 num_ref_idx_l1_active;
  unsigned __int8 weighted_pred_flag;
  unsigned __int8 weighted_bipred_idc;
  unsigned __int8 pic_init_qp;
  unsigned __int8 chroma_qp_index_offset;
  unsigned __int8 second_chroma_qp_index_offset;
  unsigned __int8 deblocking_filter_control_present_flag;
  unsigned __int8 constrained_intra_pred_flag;
  unsigned __int8 redundant_pic_cnt_present_flag;
  unsigned __int8 transform_8x8_mode_flag;
  unsigned __int8 pic_scaling_matrix_present_flag;
  unsigned __int8 pic_scaling_list_present_flag[8];
  unsigned __int8 UseDefaultScalingMatrixFlag[8];
  unsigned int ScalingList4x4[6][4];
  unsigned int ScalingList8x8[2][16];
}pic_parameter_set_rbsp_t;

/* 103 */
typedef struct 
{
  unsigned __int8 seq_parameter_set_id;
  unsigned __int8 profile_idc;
  unsigned __int8 constrained_set0_flag;
  unsigned __int8 constrained_set1_flag;
  unsigned __int8 constrained_set2_flag;
  unsigned __int8 constrained_set3_flag;
  unsigned __int8 level_idc;
  unsigned __int8 log2_max_frame_num;
  unsigned __int8 pic_order_cnt_type;
  unsigned __int8 log2_max_pic_order_cnt_lsb;
  unsigned __int8 delta_pic_order_always_zero_flag;
  int offset_for_non_ref_pic;
  int offset_for_top_to_bottom_field;
  unsigned int num_ref_frames_in_pic_order_cnt_cycle;
  int offset_for_ref_frame[256];
  unsigned __int8 num_ref_frames;
  unsigned __int8 gaps_in_frame_num_value_allowed_flag;
  unsigned int pic_width_in_mbs;
  unsigned int pic_height_in_mbs;
  unsigned __int8 frame_mbs_only_flag;
  unsigned int frame_height_in_mbs;
  unsigned __int8 mb_adaptive_frame_field_flag;
  unsigned __int8 direct_8x8_inference_flag;
  unsigned int crop_right_offset;
  unsigned int crop_bottom_offset;
  unsigned int aspect_ratio;
  unsigned __int8 seq_scaling_matrix_present_flag;
  unsigned __int8 seq_scaling_list_present_flag[8];
  unsigned __int8 UseDefaultScalingMatrixFlag[8];
  unsigned int ScalingList4x4[6][4];
  unsigned int ScalingList8x8[2][16];
}seq_parameter_set_rbsp_t;


/* 107 */
typedef enum 
{
  PSKIP = 0x0,
  BSKIP_DIRECT = 0x0,
  P16x16 = 0x1,
  P16x8 = 0x2,
  P8x16 = 0x3,
  SMB8x8 = 0x4,
  SMB8x4 = 0x5,
  SMB4x8 = 0x6,
  SMB4x4 = 0x7,
  P8x8 = 0x8,
  I4MB = 0x9,
  I16MB = 0xA,
  IBLOCK = 0xB,
  SI4MB = 0xC,
  I8MB = 0xD,
  IPCM = 0xE,
  MAXMODE = 0xF,
} MB_TYPE ;

/* 108 */
typedef struct 
{
  unsigned int frame_mad;
  unsigned int classify_enable;
  unsigned int qp_step;
  unsigned int shift_bit;
  unsigned int class_par_TH0;
  unsigned int class_par_TH1;
  unsigned int class_par_TH2;
  unsigned int class_par_TH3;
  unsigned int class_par_TH4;
  unsigned int class_par_TH5;
  unsigned int class_par_TH6;
  unsigned int class_par_TH7;
  unsigned int class_par_TH8;
  unsigned int class_par_TH9;
  unsigned int class_par_TH10;
  unsigned int MAD_TH_TF;
}classify_par;

/* 109 */
typedef classify_par classify_par_str;

/* 110 */
typedef struct 
{
  __int16 mv_x;
  __int16 mv_y;
}MotionVector;

/* 111 */
typedef struct 
{
  unsigned int isBusy[5];
  unsigned int LastFrmIdx;
  unsigned int CurrFrmIdx;
  unsigned int LastFrmIdxValid;
}FrameListManage;

/* 112 */
typedef FrameListManage FrameListManage_0;

/* 113 */
typedef struct 
{
  MB_TYPE mb_type;
  MotionVector mb_mv;
}mb_mv_list;

/* 114 */
typedef mb_mv_list mb_mv_list_0;

/* 115 */
typedef struct 
{
  unsigned int icVersion;
  unsigned int isp_config_colorSpace;
  unsigned int jpeg_compress;
  unsigned int h264_compress_buf;
  unsigned int h264_i_filter_hardware;
  unsigned int h264_dynamic_me;
  unsigned int h264_filter_param;
  unsigned int max_width;
  unsigned int max_height;
}h264_capability_type;

/* 116 */
typedef h264_capability_type h264_capability_type_0;

/* 117 */
typedef struct __attribute__((aligned(8))) 
{
  IspCtx_0 *isp;
  BitStreamManager_0 *pBSMamager;
  unsigned int IcVersion;
  unsigned int veBaseAddress;
  unsigned int H264EncBaseAddress;
  unsigned int bitstreamBaseAddPhy;
  unsigned int bitstreamBaseAddPhyEnd;
  unsigned int bitstreamSize;
  unsigned __int8 *bitstreamBaseAddVir;
  VencHeaderData_0 SPSPPSdata;
  VencBaseConfig_0 baseConfig;
  unsigned int display_width_16align;
  unsigned int display_height_16align;
  unsigned int srcWidthMB;
  unsigned int srcHeightMB;
  unsigned int dstWidthMB;
  unsigned int dstHeightMB;
  int maxWidth;
  int maxHeight;
  int nStride;
  unsigned int rot_angle;
  IspInfo_0 isp_info;
  int bEnableThumb;
  int bHeightIs16Align;
  int nScale_factor;
  VencRect_0 sCrop_rect;
  regPicInfo rPicInfo;
  regPara0 rPara0;
  regPara1_version0 rPara1_version0;
  regPara1_version1 rPara1_version1;
  regPara2 rPara2;
  regMePara rMePara;
  regTemporalPara rTemporalPara;
  intra_refresh_reg_0 intra_refresh_par;
  regStartTrig rStartTrig;
  intra_refresh_reg_0 rIntraRefreshReg;
  roi_qp_offset_0 rRoiQpOffset;
  roi_area_0 rRoiArea[4];
  dynamic_me_par0_0 rDynamic_me_par0;
  dynamic_me_par1_0 rDynamic_me_par1;
  VencROIConfig_0 sRoiConfig[4];
  unsigned int rOverTimeMb;
  unsigned int rMad;
  unsigned int rTxtBits;
  unsigned int rHeaderBits;
  unsigned int rMeInfo;
  int firstFrame;
  int frameCount;
  int first_intra_frame;
  int ForceKeyFrame;
  int maxKeyItl;
  int numberBFrames;
  int bitRate;
  int frameRate;
  int picType;
  int picEncmode;
  int rcEnable;
  int qpMax;
  int qpMin;
  int qpChangeMax;
  int qpInit;
  int sliceQp;
  int codingType;
  int allocFrames;
  unsigned __int8 *encPicAddr[5];
  unsigned int encPicAddrYPhy[5];
  unsigned int encPicAddrCPhy[5];
  unsigned int mvAddrPhy;
  unsigned __int8 *mvAddrVir;
  unsigned __int16 gradient_statistic[256];
  unsigned __int8 *histrgramAddr;
  unsigned int histrgramAddrPhy;
  unsigned __int8 *mbInfoAddrVir;
  unsigned int mbInfoAddrPhy;
  unsigned __int8 *dblkAddrVir;
  unsigned int dblkAddrPhy;
  unsigned int encFieldSizeY;
  unsigned int encFieldSizeC;
  unsigned int subFieldSize;
  FrameListManage_0 flm;
  int spsLen;
  int ppsLen;
  unsigned int TemporalFilterEnable;
  unsigned int classify_enable;
  classify_par_str classify_parameter;
  unsigned int last_frame_mad;
  unsigned int init_frame_mad;
  unsigned int Init_smooth_mb_th;
  seq_parameter_set_rbsp_t SeqParSet[1];
  pic_parameter_set_rbsp_t PicParSet[1];
  unsigned int profileIdc;
  unsigned int levelIdc;
  unsigned __int8 log2MaxFrameNum;
  unsigned __int8 log2MaxPicOrderCntLsb;
  unsigned int picOrderCntLsb;
  unsigned __int8 picOrderCntType;
  unsigned __int8 entropyCodingModeFlag;
  unsigned __int8 modelNumber;
  unsigned __int8 transform8x8ModeFlag;
  unsigned __int8 disableDeIdc;
  int alphaOffsetDiv2;
  int betaOffsetDiv2;
  unsigned __int8 chromaQpIndexOffset;
  unsigned __int8 constrainedIntraPredFlag;
  unsigned __int8 nalReferenceIdc;
  unsigned __int8 numRefIdxL0Active;
  unsigned __int8 numRefIdxL1Active;
  unsigned __int8 numRefFrames;
  unsigned __int8 sliceType;
  unsigned int mic_sec_per_frm;
  int prePts;
  int lastPts;
  int curr_frm_idx;
  int last_idr_code_order;
  int last_idr_disp_order;
  int last_idr;
  int topPoc;
  int bottomPoc;
  int framePoc;
  unsigned int frameNum;
  unsigned int naluBits;
  RCQuadratic p_quad;
  int rc_mode;
  float ratio_framerate;
  MotionParam_0 motion_parameter;
  unsigned int complexThreshold;
  unsigned int ratioThreahold;
  unsigned int mdFlag;
  unsigned int mdFlag_tmp[2];
  unsigned int mdFlag_last;
  unsigned int motion_average;
  unsigned int motion_counter;
  unsigned int motion_detect_array[5];
  unsigned __int8 motion_array_full_flag;
  int g_ve_status;
  int motion_base_frame;
  int I_filter_enable;
  int bOutputFilterFrame;
  int bUseFilterFrame;
  VencInputBuffer_0 mInputBuffer;
  int nSliceHeight;
  VencH264FixQP_0 sFixQP;
  VencCyclicIntraRefresh_0 sIntraRefresh;
  int nIntraRefreshPart;
  unsigned int DynamicMeEnable;
  int sub_allocFrames;
  unsigned __int8 *sub_encPicAddr[5];
  unsigned int sub_encPicAddrYPhy[5];
  FrameListManage_0 sub_flm;
  h264_capability_type_0 h264Capatibility;
  unsigned int colorSpace_RGB2YUV;
  unsigned int colorSpace_YUV2YUV;
  unsigned int vbv_size;
  int isp_pic_var;
  unsigned int compression_size;
} H264Ctx;

/* 118 */
typedef H264Ctx H264Ctx_0;

/* 119 */
enum QP_RANGE
{
  MIN_QP = 0x0,
  MAX_QP = 0x33,
};

/* 120 */

/* 121 */

/* 122 */
typedef rational_t rational_t_0;

/* 123 */

/* 124 */
typedef srational_t srational_t_0;

/* 125 */

/* 126 */
typedef EXIFInfo EXIFInfo_0;

/* 127 */
struct regJpegPara
{
  unsigned __int32 dcLuma : 11;
  unsigned __int32 r0 : 5;
  unsigned __int32 dcChroma : 11;
  unsigned __int32 r1 : 3;
  unsigned __int32 stuffZeroEnable : 1;
  unsigned __int32 EPTB_disable : 1;
};

/* 128 */
struct regJpegPara1
{
  unsigned __int32 class_thres : 8;
  unsigned __int32 run_length_th : 4;
  unsigned __int32 r0 : 18;
  unsigned __int32 coef_down_disenable : 1;
  unsigned __int32 run_len_opt_disenable : 1;
};

/* 129 */
typedef struct 
{
  __int16 tag;
  __int16 type;
  int Count;
  int Value_offset;
} IFDElement;

/* 130 */
typedef IFDElement IFDElement_0;

/* 131 */
typedef struct 
{
  IFDElement_0 element;
  unsigned __int8 *byte_buffer;
  unsigned __int8 *buffer;
  unsigned __int8 *cur_ptr;
  unsigned __int8 *gps_offset_position;
  unsigned __int8 *exif_offset_position;
  unsigned __int8 *IFD_1st_offset_position;
  unsigned int cur_offset;
  unsigned __int8 *ThumbnailOffset_pos;
  unsigned __int8 *ThumbnailSize_pos;
  unsigned int ThumbnailOffset;
  unsigned int ThumbnailSize;
  unsigned int ThumbnailWidth;
  unsigned int ThumbnailHeight;
  unsigned __int8 *exif_size_position;
  unsigned __int8 *IFD_data_point;
  int enable_gps_info;
  int Orientation;
  unsigned __int8 *DateTime;
  unsigned __int8 *CameraMake;
  unsigned __int8 *CameraModel;
  rational_t_0 ExposureTime;
  rational_t_0 FNumber;
  __int16 ISOSpeed;
  srational_t_0 ShutterSpeedValue;
  srational_t_0 BrightnessValue;
  srational_t_0 ExposureBiasValue;
  __int16 MeteringMode;
  __int16 FlashUsed;
  rational_t_0 FocalLength;
  rational_t_0 DigitalZoomRatio;
  __int16 WhiteBalance;
  __int16 ExposureMode;
  unsigned __int8 GPSLatitudeRef[2];
  rational_t_0 GPSLatitude[3];
  unsigned __int8 GPSLongitudeRef[2];
  rational_t_0 GPSLongitude[3];
  unsigned __int8 GPSAltitudeRef;
  rational_t_0 GPSAltitude;
  rational_t_0 GPSTimeStamp[3];
  unsigned __int8 GPSDateStamp[11];
  unsigned __int8 *gps_processing_method;
  int gps_processing_method_len;
}EXIFContext;

/* 132 */
typedef EXIFContext EXIFContext_0;

/* 133 */
struct __attribute__((aligned(8))) JpegCtx
{
  IspCtx_0 *isp;
  unsigned int IcVersion;
  BitStreamManager_0 *pBSMamager;
  unsigned int veBaseAddress;
  unsigned int JpegEncBaseAddress;
  unsigned int bitstreamBaseAddPhy;
  unsigned int bitstreamBaseAddPhyEnd;
  unsigned int bitstreamSize;
  unsigned __int8 *bitstreamBaseAddVir;
  VencBaseConfig_0 baseConfig;
  unsigned int display_width;
  unsigned int display_height;
  unsigned int srcWidthMB;
  unsigned int srcHeightMB;
  unsigned int dstWidthMB;
  unsigned int dstHeightMB;
  unsigned int inputStrideMB;
  unsigned __int8 *thumbBaseAddVir;
  unsigned int thumbBaseAddPhy;
  unsigned int exifLength;
  unsigned __int8 *thumbWBbufferVir_y;
  unsigned __int8 *thumbWBbufferVir_c;
  unsigned int thumbWBbufferPhy_y;
  unsigned int thumbWBbufferPhy_c;
  int quality;
  unsigned __int16 quant_tbl[2][128];
  unsigned __int16 quant_tbl_aw[256];
  int last_dc_val[3];
  IspInfo_0 isp_info;
  EXIFContext_0 *pExifCtx;
  EXIFInfo_0 exifInfo;
  int bEnableThumb;
  int bEnableExif;
  int bHeightIs16Align;
  int nScale_factor;
  VencRect_0 sCrop_rect;
  unsigned int icVersion;
  unsigned int thumbWBbuffer_width;
  unsigned int thumbWBbuffer_height;
  int bOnlyExif;
  unsigned int vbv_size;
};

/* 134 */
/* 135 */

/* 136 */

/* 137 */

/* 138 */


